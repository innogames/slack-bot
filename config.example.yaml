
slack:
  token: # use xoxb-1234567-secret
  socket_token: # needed for Socket mode, starts with "xapp-"
  debug: false # some more slack debug information

# list of trusted slack users: allows the user-id and the name
allowed_users:
  - your.name
  - U122323

# there are some restricted commands, like reading logs or show runtime stats
admin_users:
  - UADMINID

# define a custom set of own commands: They match a regular expression any can call a set of other internal/custom commands
# here just some examples:
commands:
  - name: Deploy
    trigger: "deploy (?P<branch>[\\w\\d\\-_\\.\\/]+)"
    commands:
      - trigger job BuildClients {{.branch}}
      - trigger job Deploy {{.branch}}
      - reply I deployed {{.branch}}
      - add link "Open Admintool" https://project.example.com/admintool/

#  - name: List open Jira bugs
#    trigger: "open (?P<project>(backend|mobile|frontend)) bugs"
#    description: "Lists open Jira bugs from a given component"
#    category: QA
#    commands:
#      - "add reaction :bug:"
#      - jql issuetype = Bug AND component = "{{.project}}" AND resolution = Unresolved ORDER BY priority DESC, created DESC
#    examples:
#      - open backend bugs
#      - open mobile bugs
#      - open frontend bugs

# optional Jenkins integration
#jenkins:
#  host: https://jenkins.example.com
#  username: username
#  password: secret
#  jobs:
#    BackendTests:
#      parameters:
#        - name: BRANCH
#          default: master
#          type: branch
#    BuildFrontendClient:
#      parameters:
#        - name: BRANCH
#          default: master
#          type: branch

# optional Jira integration
jira:
  #host: https://jira.example.de
  username: readonlyuser
  password: secret
  project: FOO

# optional Github integration to watch PR state
github:
  access_token: # optional when using github features

# optional Gitlab integration to watch merge request state
#gitlab:
#  host: https://gitlab.example.de
#  accesstoken: # needed for the API


# used for the "weather" command to fetch current weather information from https://openweathermap.org/api
#open_weathermap:
#  apikey: iamtheapifromopenweathermap
#  location: Hamburg

# able to set a custom "approved" reactions. E.g to see directly who or which component/department approved a pullrequest
# you can use the name of the reaction or the Unicode character directoy
#pullrequest:
#  reactions:
#    merged: custom_merge_arrow
#    review: ðŸ‘€
#  custom_approve_reaction:
#    nerdydev: "approved_backend"
#    iamamobiledev: "approved_mobile"
#    iamamobiledev2: "approved_mobile"

logger:
  level: info
  file: ./bot.log

timezone: UTC
